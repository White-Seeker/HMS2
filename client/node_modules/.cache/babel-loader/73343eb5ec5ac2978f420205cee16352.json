{"ast":null,"code":"var _jsxFileName = \"/Users/sherlock/Desktop/reactapp/client/src/pages/noticeBoard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport jwt from 'jsonwebtoken';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Noticeboard() {\n  _s();\n\n  const [notice, setNotice] = useState('');\n\n  async function getNotice() {\n    const response = await fetch('http://localhost:1337/api/notice');\n    const data = await response.json();\n    this.setState({\n      totalReactPackages: data.total\n    });\n  }\n\n  async function updateQuote(event) {\n    event.preventDefault();\n    const req = await fetch('http://localhost:1337/api/notice', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-access-token': localStorage.getItem('token')\n      },\n      body: JSON.stringify({\n        quote: tempQuote\n      })\n    });\n    const data = await req.json();\n\n    if (data.status === 'ok') {\n      setNotice(tempQuote);\n      setTempQuote('');\n    } else {\n      alert(data.error);\n    }\n  }\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n\n    if (token) {\n      const user = jwt.decode(token);\n\n      if (!user) {\n        localStorage.removeItem('token');\n      } else {}\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"Hostel Notice Board\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Your quote: \", notice || 'No quote found']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Noticeboard, \"Q+gDX2T1nUxMsAbI3W/nxq3toZw=\");\n\n_c = Noticeboard;\nexport default Noticeboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Noticeboard\");","map":{"version":3,"sources":["/Users/sherlock/Desktop/reactapp/client/src/pages/noticeBoard.js"],"names":["React","useEffect","useState","jwt","useHistory","Noticeboard","notice","setNotice","getNotice","response","fetch","data","json","setState","totalReactPackages","total","updateQuote","event","preventDefault","req","method","headers","localStorage","getItem","body","JSON","stringify","quote","tempQuote","status","setTempQuote","alert","error","token","user","decode","removeItem"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,SAASC,UAAT,QAA2B,kBAA3B;;;AAEA,SAASC,WAAT,GAAsB;AAAA;;AAClB,QAAM,CAACC,MAAD,EAAQC,SAAR,IAAqBL,QAAQ,CAAC,EAAD,CAAnC;;AACA,iBAAeM,SAAf,GAA0B;AAEtB,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAD,CAA5B;AACA,UAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACA,SAAKC,QAAL,CAAc;AAAEC,MAAAA,kBAAkB,EAAEH,IAAI,CAACI;AAA3B,KAAd;AAEH;;AACD,iBAAeC,WAAf,CAA2BC,KAA3B,EAAkC;AACpCA,IAAAA,KAAK,CAACC,cAAN;AAEA,UAAMC,GAAG,GAAG,MAAMT,KAAK,CAAC,kCAAD,EAAqC;AAC3DU,MAAAA,MAAM,EAAE,MADmD;AAE3DC,MAAAA,OAAO,EAAE;AACR,wBAAgB,kBADR;AAER,0BAAkBC,YAAY,CAACC,OAAb,CAAqB,OAArB;AAFV,OAFkD;AAM3DC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACpBC,QAAAA,KAAK,EAAEC;AADa,OAAf;AANqD,KAArC,CAAvB;AAWA,UAAMjB,IAAI,GAAG,MAAMQ,GAAG,CAACP,IAAJ,EAAnB;;AACA,QAAID,IAAI,CAACkB,MAAL,KAAgB,IAApB,EAA0B;AACzBtB,MAAAA,SAAS,CAACqB,SAAD,CAAT;AACAE,MAAAA,YAAY,CAAC,EAAD,CAAZ;AACA,KAHD,MAGO;AACNC,MAAAA,KAAK,CAACpB,IAAI,CAACqB,KAAN,CAAL;AACA;AACD;;AAEE/B,EAAAA,SAAS,CAAC,MAAM;AAClB,UAAMgC,KAAK,GAAGX,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;;AACA,QAAIU,KAAJ,EAAW;AACV,YAAMC,IAAI,GAAG/B,GAAG,CAACgC,MAAJ,CAAWF,KAAX,CAAb;;AACA,UAAI,CAACC,IAAL,EAAW;AACVZ,QAAAA,YAAY,CAACc,UAAb,CAAwB,OAAxB;AACA,OAFD,MAEO,CAEN;AACD;AACD,GAVW,EAUT,EAVS,CAAT;AAYA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAGA;AAAA,iCAAiB9B,MAAM,IAAI,gBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,YAHA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GAnDQD,W;;KAAAA,W;AAqDT,eAAeA,WAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport jwt from 'jsonwebtoken'\nimport { useHistory } from 'react-router-dom'\n\nfunction Noticeboard(){\n    const [notice,setNotice] = useState('')\n    async function getNotice(){\n\n        const response = await fetch('http://localhost:1337/api/notice');\n        const data = await response.json();\n        this.setState({ totalReactPackages: data.total })\n        \n    }\n    async function updateQuote(event) {\n\t\tevent.preventDefault()\n\n\t\tconst req = await fetch('http://localhost:1337/api/notice', {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t'x-access-token': localStorage.getItem('token'),\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tquote: tempQuote,\n\t\t\t}),\n\t\t})\n\n\t\tconst data = await req.json()\n\t\tif (data.status === 'ok') {\n\t\t\tsetNotice(tempQuote)\n\t\t\tsetTempQuote('')\n\t\t} else {\n\t\t\talert(data.error)\n\t\t}\n\t}\n\n    useEffect(() => {\n\t\tconst token = localStorage.getItem('token')\n\t\tif (token) {\n\t\t\tconst user = jwt.decode(token)\n\t\t\tif (!user) {\n\t\t\t\tlocalStorage.removeItem('token')\n\t\t\t} else {\n\n\t\t\t}\n\t\t}\n\t}, [])\n\n    return(\n        <div>\n            <h5>Hostel Notice Board</h5>\n\n        <h1>Your quote: {notice || 'No quote found'}</h1>\n        </div>\n    )\n}\n\nexport default Noticeboard"]},"metadata":{},"sourceType":"module"}