{"ast":null,"code":"var _jsxFileName = \"/Users/sherlock/Desktop/wow2/client/src/pages/notice.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Notice() {\n  _s();\n\n  const [name, setName] = useState('');\n  const [notice, setNotice] = useState('');\n\n  const noticePage = () => {\n    window.location.href = '/notice';\n  }; //Publish Notice\n\n\n  async function publishNotice(event) {\n    event.preventDefault();\n    const response = await fetch('http://localhost:1337/api/notice', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name,\n        notice\n      })\n    });\n    const data = await response.json();\n\n    if (data.status === 'ok') {\n      alert('Notice Published');\n    }\n  } //Updates checking\n\n\n  const [loading, setloading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetch('http://localhost:1337/api/notice').then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n\n      throw response;\n    }).then(test => {\n      setNotice(test);\n    }).catch(error => {\n      console.error(\"Error fetching data: \", error);\n      setError(error);\n    }).finally(() => {\n      setloading(false);\n    });\n  });\n  if (loading) return \"Loading...\";\n  if (error) return \"Error\";\n\n  async function getData() {\n    await fetch(\"http://localhost:1337/api/notice\").then(response => {\n      setNotice(response.data);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"HOSTEL WARD\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: notice\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: publishNotice,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: name,\n        onChange: e => setName(e.target.value),\n        type: \"text\",\n        placeholder: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: notice,\n        onChange: e => setNotice(e.target.value),\n        type: \"text\",\n        placeholder: \"notice\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"publish\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: noticePage,\n      children: \"Publish\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Notice, \"v0Nth3fCPNoLQf0Q7c8q5FN0RGU=\");\n\n_c = Notice;\nexport default Notice;\n\nvar _c;\n\n$RefreshReg$(_c, \"Notice\");","map":{"version":3,"sources":["/Users/sherlock/Desktop/wow2/client/src/pages/notice.js"],"names":["React","useEffect","useState","Notice","name","setName","notice","setNotice","noticePage","window","location","href","publishNotice","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","status","alert","loading","setloading","error","setError","then","ok","test","catch","console","finally","getData","e","target","value"],"mappings":"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","sourcesContent":["import React, {useEffect,useState} from 'react'\n\nfunction Notice () {\n\n    const [name,setName] = useState('')\n    const [notice,setNotice] = useState('')\n\n    const noticePage = () =>{\n        window.location.href='/notice';\n    }\n\n    //Publish Notice\n\n    async function publishNotice(event){\n        event.preventDefault()\n        const response = await fetch('http://localhost:1337/api/notice',{\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/json',\n            },\n            body: JSON.stringify({\n                name,\n                notice,\n            }),\n        })\n        const data=await response.json()\n        if (data.status === 'ok') {\n            alert('Notice Published')\n\t\t}\n    }\n\n    //Updates checking\n    const [loading, setloading] = useState(true);\n    const [error,setError] = useState(null);\n\n    useEffect(()=>{\n        fetch('http://localhost:1337/api/notice')\n        .then(response =>{\n            if(response.ok){\n                return response.json()\n            }\n            throw response;\n        })\n        .then(test=>{\n            setNotice(test);\n        })\n        .catch(error =>{\n            console.error(\"Error fetching data: \",error);\n            setError(error);\n        })\n        .finally(()=>{\n            setloading(false);\n        })\n    })\n    if(loading) return \"Loading...\";\n    if(error) return \"Error\";\n\n    async function getData(){\n        await fetch(\"http://localhost:1337/api/notice\")\n        .then((response)=>{ \n            setNotice(response.data)\n        })\n    }\n\n    return(\n        <div>\n            <h1>HOSTEL WARD</h1>\n            \n            <h2>{notice}</h2>\n            <form onSubmit={publishNotice}>\n                <input\n\t\t\t\t\tvalue={name}\n                    onChange={(e) => setName(e.target.value)}\n                    type=\"text\"\n                    placeholder=\"name\"\n\t\t\t\t/>\n\t\t\t\t<br />\n\t\t\t\t<input\n\t\t\t\t\tvalue={notice}\n                    onChange ={(e) => setNotice(e.target.value)}\n                    type=\"text\"\n                    placeholder=\"notice\"\n\t\t\t\t/>\n\t\t\t\t<br />\n\t\t\t\t<input type=\"submit\" value=\"publish\" />\n\t\t\t</form>\n      <button onClick={noticePage}>Publish</button>\n        </div>\n    )\n}\n\nexport default Notice"]},"metadata":{},"sourceType":"module"}