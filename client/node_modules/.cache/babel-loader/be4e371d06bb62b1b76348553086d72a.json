{"ast":null,"code":"var _jsxFileName = \"/Users/sherlock/Desktop/wow2/client/src/pages/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport jwt from 'jsonwebtoken';\nimport { useHistory } from 'react-router-dom';\nimport { json } from \"body-parser\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = () => {\n  _s();\n\n  const history = useHistory();\n  const [data, setData] = useState([]);\n  const item = [];\n\n  const logout = () => {\n    window.localStorage.clear();\n    window.location.href = '/';\n  };\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    const user = jwt.decode(token);\n\n    if (token) {\n      apiGet(user);\n      console.log(user);\n\n      if (!user) {\n        localStorage.removeItem('token');\n        history.replace('/studentlogin');\n      }\n    } else {\n      history.push('/studentlogin');\n    }\n  }, []);\n\n  const apiGet = user => {\n    fetch('http://localhost:1337/api/studentregister').then(response => response.json()).then(json => {\n      setData(json);\n\n      for (let i = 0; i < json.user.length; i = i + 1) {\n        if (user.name == json.user[i].name) console.log(json.user[i].name);\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"This is the student Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: logout,\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Dashboard, \"OHOH5BA7UdbPRw32zxjKCRSwrbA=\", false, function () {\n  return [useHistory];\n});\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Users/sherlock/Desktop/wow2/client/src/pages/Dashboard.js"],"names":["React","useEffect","useState","jwt","useHistory","json","Dashboard","history","data","setData","item","logout","window","localStorage","clear","location","href","token","getItem","user","decode","apiGet","console","log","removeItem","replace","push","fetch","then","response","i","length","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,IAAT,QAAqB,aAArB;;;AAGA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACvB,QAAMC,OAAO,GAAGH,UAAU,EAA1B;AACA,QAAM,CAACI,IAAD,EAAOC,OAAP,IAAgBP,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAMQ,IAAI,GAAC,EAAX;;AACA,QAAMC,MAAM,GAAC,MAAI;AACVC,IAAAA,MAAM,CAACC,YAAP,CAAoBC,KAApB;AACAF,IAAAA,MAAM,CAACG,QAAP,CAAgBC,IAAhB,GAAqB,GAArB;AACH,GAHJ;;AAKAf,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMgB,KAAK,GAAGJ,YAAY,CAACK,OAAb,CAAqB,OAArB,CAAd;AACA,UAAMC,IAAI,GAAGhB,GAAG,CAACiB,MAAJ,CAAWH,KAAX,CAAb;;AACA,QAAIA,KAAJ,EAAW;AACVI,MAAAA,MAAM,CAACF,IAAD,CAAN;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;;AACA,UAAI,CAACA,IAAL,EAAW;AACVN,QAAAA,YAAY,CAACW,UAAb,CAAwB,OAAxB;AACAjB,QAAAA,OAAO,CAACkB,OAAR,CAAgB,eAAhB;AACA;AACD,KAPD,MAQI;AACHlB,MAAAA,OAAO,CAACmB,IAAR,CAAa,eAAb;AACA;AACD,GAdQ,EAcN,EAdM,CAAT;;AAgBA,QAAML,MAAM,GAAIF,IAAD,IAAS;AACvBQ,IAAAA,KAAK,CAAC,2CAAD,CAAL,CACCC,IADD,CACOC,QAAD,IAAYA,QAAQ,CAACxB,IAAT,EADlB,EAECuB,IAFD,CAEOvB,IAAD,IAAQ;AACbI,MAAAA,OAAO,CAACJ,IAAD,CAAP;;AACA,WAAI,IAAIyB,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACzB,IAAI,CAACc,IAAL,CAAUY,MAAxB,EAA+BD,CAAC,GAACA,CAAC,GAAC,CAAnC,EAAqC;AACpC,YAAGX,IAAI,CAACa,IAAL,IAAW3B,IAAI,CAACc,IAAL,CAAUW,CAAV,EAAaE,IAA3B,EACAV,OAAO,CAACC,GAAR,CAAYlB,IAAI,CAACc,IAAL,CAAUW,CAAV,EAAaE,IAAzB;AACA;AACD,KARD;AASA,GAVD;;AAaA,sBACC;AAAA,4BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAEC;AAAQ,MAAA,OAAO,EAAErB,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAMA,CA5CD;;GAAML,S;UACWF,U;;;KADXE,S;AA8CN,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport jwt from 'jsonwebtoken'\nimport { useHistory } from 'react-router-dom'\nimport { json } from \"body-parser\";\n\n\nconst Dashboard = () => {\n\tconst history = useHistory()\n\tconst [data, setData]=useState([])\n\tconst item=[];\n\tconst logout=()=>{\n        window.localStorage.clear();\n        window.location.href='/'\n    }\n\n\tuseEffect(() => {\n\t\tconst token = localStorage.getItem('token')\n\t\tconst user = jwt.decode(token)\n\t\tif (token) {\n\t\t\tapiGet(user);\n\t\t\tconsole.log(user);\n\t\t\tif (!user) {\n\t\t\t\tlocalStorage.removeItem('token')\n\t\t\t\thistory.replace('/studentlogin')\n\t\t\t} \n\t\t}\n\t\telse{\n\t\t\thistory.push('/studentlogin')\n\t\t}\n\t}, [])\n\n\tconst apiGet = (user) =>{\n\t\tfetch('http://localhost:1337/api/studentregister')\n\t\t.then((response)=>response.json())\n\t\t.then((json)=>{\n\t\t\tsetData(json);\n\t\t\tfor(let i=0;i<json.user.length;i=i+1){\n\t\t\t\tif(user.name==json.user[i].name)\n\t\t\t\tconsole.log(json.user[i].name);\n\t\t\t}\n\t\t})\n\t}\n\n\t\n\treturn (\n\t\t<div>\n\t\t\t<h1>This is the student Dashboard</h1>\n\t\t\t<button onClick={logout}>Logout</button>\n\t\t</div>\n\t)\n}\n\nexport default Dashboard\n"]},"metadata":{},"sourceType":"module"}