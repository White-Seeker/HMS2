{"ast":null,"code":"var _jsxFileName = \"/Users/sherlock/Desktop/wow2/client/src/pages/notice.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport jwt from 'jsonwebtoken';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Notice() {\n  _s();\n\n  const [name, setName] = useState('');\n  const [notice, setNotice] = useState('');\n  const [tempNotice, setTempNotice] = useState('');\n  const history = useHistory();\n\n  const noticePage = () => {\n    window.location.href = '/notice';\n  };\n\n  async function populateNotice() {\n    const req = await fetch('http://localhost:1337/api/notice', {\n      headers: {\n        'x-access-token': localStorage.getItem('token')\n      }\n    });\n    const data = await req.json();\n\n    if (data.status === 'ok') {\n      setNotice(data.notice);\n    } else {\n      alert(data.error);\n    }\n  }\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n\n    if (token) {\n      populateNotice();\n    }\n  }, []);\n\n  async function publishNotice(event) {\n    event.preventDefault();\n    const response = await fetch('http://localhost:1337/api/notice', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-access-token': localStorage.getItem('token')\n      },\n      body: JSON.stringify({\n        name,\n        notice: tempNotice\n      })\n    });\n    const data = await response.json();\n\n    if (data.status === 'ok') {\n      setNotice(notice);\n      setNotice('');\n      alert('Notice Published');\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Your quote: \", notice || 'No quote found']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"HOSTEL WARD\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: publishNotice,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: name,\n        onChange: e => setName(e.target.value),\n        type: \"text\",\n        placeholder: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: notice,\n        onChange: e => setNotice(e.target.value),\n        type: \"text\",\n        placeholder: \"notice\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"publish\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: noticePage,\n      children: \"Publish\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Notice, \"YJHAn4bpX//gC+7wvRPPdPyDm0Y=\", false, function () {\n  return [useHistory];\n});\n\n_c = Notice;\nexport default Notice;\n\nvar _c;\n\n$RefreshReg$(_c, \"Notice\");","map":{"version":3,"sources":["/Users/sherlock/Desktop/wow2/client/src/pages/notice.js"],"names":["React","useEffect","useState","jwt","useHistory","Notice","name","setName","notice","setNotice","tempNotice","setTempNotice","history","noticePage","window","location","href","populateNotice","req","fetch","headers","localStorage","getItem","data","json","status","alert","error","token","publishNotice","event","preventDefault","response","method","body","JSON","stringify","e","target","value"],"mappings":"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","sourcesContent":["import React, {useEffect,useState} from 'react'\nimport jwt from 'jsonwebtoken'\nimport { useHistory } from 'react-router-dom'\n\nfunction Notice () {\n\n    const [name,setName] = useState('')\n    const [notice,setNotice] = useState('')\n    const [tempNotice, setTempNotice] = useState('')\n\n    const history = useHistory()\n\n\n    const noticePage = () =>{\n        window.location.href='/notice';\n    }\n\n    async function populateNotice() {\n\t\tconst req = await fetch('http://localhost:1337/api/notice', {\n\t\t\theaders: {\n\t\t\t\t'x-access-token': localStorage.getItem('token'),\n\t\t\t},\n\t\t})\n\n\t\tconst data = await req.json()\n\t\tif (data.status === 'ok') {\n\t\t\tsetNotice(data.notice)\n\t\t} else {\n\t\t\talert(data.error)\n\t\t}\n\t}\n\n    useEffect(() => {\n\t\tconst token = localStorage.getItem('token')\n\t\tif (token) {\n\t\t\tpopulateNotice()\n\t\t}\n\t}, [])\n\n    async function publishNotice(event){\n        event.preventDefault()\n        const response = await fetch('http://localhost:1337/api/notice',{\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/json',\n                'x-access-token': localStorage.getItem('token'),\n            },\n            body: JSON.stringify({\n                name,\n                notice:tempNotice,\n            }),\n        })\n        const data=await response.json()\n        if (data.status === 'ok') {\n            setNotice(notice)\n            setNotice('')\n            alert('Notice Published')\n\t\t}\n    }\n\n    return(\n        <div>\n            <h1>Your quote: {notice || 'No quote found'}</h1>\n            <h1>HOSTEL WARD</h1>\n            <form onSubmit={publishNotice}>\n                <input\n\t\t\t\t\tvalue={name}\n                    onChange={(e) => setName(e.target.value)}\n                    type=\"text\"\n                    placeholder=\"name\"\n\t\t\t\t/>\n\t\t\t\t<br />\n\t\t\t\t<input\n\t\t\t\t\tvalue={notice}\n                    onChange ={(e) => setNotice(e.target.value)}\n                    type=\"text\"\n                    placeholder=\"notice\"\n\t\t\t\t/>\n\t\t\t\t<br />\n\t\t\t\t<input type=\"submit\" value=\"publish\" />\n\t\t\t</form>\n      <button onClick={noticePage}>Publish</button>\n        </div>\n    )\n}\n\nexport default Notice"]},"metadata":{},"sourceType":"module"}