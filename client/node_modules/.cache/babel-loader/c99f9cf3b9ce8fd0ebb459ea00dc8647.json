{"ast":null,"code":"var _jsxFileName = \"/Users/sherlock/Desktop/wow2/client/src/pages/Register.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const history = useHistory();\n  const [name, setName] = useState(''); //the first value is current state and second value is function used to update our state\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [tempnotice, setNotice] = useState('');\n\n  const login = () => {\n    window.location.href = '/login';\n  };\n\n  async function populateNotice() {\n    const req = await fetch('http://localhost:1337/api/notice', {\n      body: JSON.stringify({\n        notice: tempnotice\n      })\n    });\n    const data = await req.json();\n\n    if (data.status == 'ok') {\n      setNotice(data.notice);\n    } else {\n      alert(data.error);\n    }\n  }\n\n  async function registerUser(event) {\n    event.preventDefault();\n    const response = await fetch('http://localhost:1337/api/register', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name,\n        email,\n        password\n      })\n    });\n    const data = await response.json();\n\n    if (data.status === 'ok') {\n      history.push('/login'); // if registration is successfull \n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: registerUser,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: name,\n        onChange: e => setName(e.target.value),\n        type: \"text\",\n        placeholder: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        type: \"email\",\n        placeholder: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        type: \"password\",\n        placeholder: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: login,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"fCKqxMKTn4AD2EsGFJozyjKK4MQ=\", false, function () {\n  return [useHistory];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/sherlock/Desktop/wow2/client/src/pages/Register.js"],"names":["useState","useHistory","App","history","name","setName","email","setEmail","password","setPassword","tempnotice","setNotice","login","window","location","href","populateNotice","req","fetch","body","JSON","stringify","notice","data","json","status","alert","error","registerUser","event","preventDefault","response","method","headers","push","e","target","value"],"mappings":"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","sourcesContent":["import { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\n\nfunction App() {\n\tconst history = useHistory()\n\n\tconst [name, setName] = useState('') //the first value is current state and second value is function used to update our state\n\tconst [email, setEmail] = useState('')\n\tconst [password, setPassword] = useState('')\n\tconst [tempnotice,setNotice] = useState('')\n\n  const login=()=>{\n    window.location.href='/login';\n  }\n\n  \tasync function populateNotice(){\n\t\t  const req=await fetch('http://localhost:1337/api/notice',{\n\t\t\tbody: JSON.stringify({\n\t\t\t\tnotice: tempnotice,\n\t\t\t})\n\t\t  })\n\t\t  const data=await req.json()\n\t\t  if(data.status =='ok'){\n\t\t\tsetNotice(data.notice)\n\t\t  }\n\t\t  else{\n\t\t\t  alert(data.error)\n\t\t  }\n\t  }\n\tasync function registerUser(event) {\n\t\tevent.preventDefault()\n\n\t\tconst response = await fetch('http://localhost:1337/api/register', {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tname,\n\t\t\t\temail,\n\t\t\t\tpassword,\n\t\t\t}),\n\t\t})\n\n\t\tconst data = await response.json()\n\n\t\tif (data.status === 'ok') {\n\t\t\thistory.push('/login') // if registration is successfull \n\t\t}\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<h1>Register</h1>\n\t\t\t<form onSubmit={registerUser}>\n\t\t\t\t<input\n\t\t\t\t\tvalue={name}\n\t\t\t\t\tonChange={(e) => setName(e.target.value)}\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tplaceholder=\"Name\"\n\t\t\t\t/>\n\t\t\t\t<br />\n\t\t\t\t<input\n\t\t\t\t\tvalue={email}\n\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\n\t\t\t\t\ttype=\"email\"\n\t\t\t\t\tplaceholder=\"Email\"\n\t\t\t\t/>\n\t\t\t\t<br />\n\t\t\t\t<input\n\t\t\t\t\tvalue={password}\n\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\n\t\t\t\t\ttype=\"password\"\n\t\t\t\t\tplaceholder=\"Password\"\n\t\t\t\t/>\n\t\t\t\t<br />\n\t\t\t\t<input type=\"submit\" value=\"Register\" />\n\t\t\t</form>\n      <button onClick={login}>Login</button>\n\t\t</div>\n\t)\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}