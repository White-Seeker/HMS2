{"ast":null,"code":"var _jsxFileName = \"/Users/sherlock/Desktop/wow2/client/src/pages/Todo.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Todo() {\n  _s();\n\n  var i = 0;\n  const [data, setData] = useState([]);\n\n  const apiGet = () => {\n    fetch('http://localhost:1337/api/notice').then(response => response.json()).then(json => {\n      console.log(json);\n      setData(json);\n    });\n  };\n\n  useEffect(() => {\n    apiGet();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"center\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"NOTICE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: JSON.stringify(data.user[i++].notice, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Undersigned: \", JSON.stringify(data.user[i++].name, null, 2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: data.map(data => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Todo, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n\n_c = Todo;\nexport default Todo;\n/*{JSON.stringify(data.user,null,2)}*/\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["/Users/sherlock/Desktop/wow2/client/src/pages/Todo.js"],"names":["React","useState","useEffect","Todo","i","data","setData","apiGet","fetch","then","response","json","console","log","JSON","stringify","user","notice","name","map"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;;;AAEA,SAASC,IAAT,GAAe;AAAA;;AAEX,MAAIC,CAAC,GAAC,CAAN;AAEA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAiBL,QAAQ,CAAC,EAAD,CAA/B;;AACA,QAAMM,MAAM,GAAG,MAAI;AACfC,IAAAA,KAAK,CAAC,kCAAD,CAAL,CACCC,IADD,CACOC,QAAD,IAAYA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEOE,IAAD,IAAQ;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAL,MAAAA,OAAO,CAACK,IAAD,CAAP;AACH,KALD;AAMH,GAPD;;AAUAT,EAAAA,SAAS,CAAC,MAAI;AACVK,IAAAA,MAAM;AACT,GAFQ,EAEP,EAFO,CAAT;AAIA,sBAEI;AAAA,2BAAQ;AAAA,8BACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADI,eAEJ;AAAA,kBAAIO,IAAI,CAACC,SAAL,CAAeV,IAAI,CAACW,IAAL,CAAUZ,CAAC,EAAX,EAAea,MAA9B,EAAqC,IAArC,EAA0C,CAA1C;AAAJ;AAAA;AAAA;AAAA;AAAA,cAFI,eAGJ;AAAA,oCAAiBH,IAAI,CAACC,SAAL,CAAeV,IAAI,CAACW,IAAL,CAAUZ,CAAC,EAAX,EAAec,IAA9B,EAAmC,IAAnC,EAAwC,CAAxC,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,cAHI,eAKJ;AAAA,kBACKb,IAAI,CAACc,GAAL,CAASd,IAAI,iBACd;AAAA,oBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,gBADC;AADL;AAAA;AAAA;AAAA;AAAA,cALI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAR;AAAA;AAAA;AAAA;AAAA,UAFJ;AAeH;;GAlCQF,I;;KAAAA,I;AAoCT,eAAeA,IAAf;AAEA","sourcesContent":["import React from \"react\";\nimport {useState, useEffect} from \"react\";\n\nfunction Todo(){\n\n    var i=0;\n    \n    const [data, setData]= useState([])\n    const apiGet = ()=>{\n        fetch('http://localhost:1337/api/notice')\n        .then((response)=>response.json())\n        .then((json)=>{\n            console.log(json);\n            setData(json);\n        })\n    }\n\n    \n    useEffect(()=>{\n        apiGet();\n    },[])\n\n    return (\n        \n        <center><div>\n            <h2>NOTICE</h2>\n            <p>{JSON.stringify(data.user[i++].notice,null,2)}</p>\n            <p>Undersigned: {JSON.stringify(data.user[i++].name,null,2)}</p>\n        \n            <ul>\n                {data.map(data => (\n                <li>{data}</li>\n                ))}\n            </ul>\n        \n        </div></center>\n    )\n}\n\nexport default Todo\n\n/*{JSON.stringify(data.user,null,2)}*/"]},"metadata":{},"sourceType":"module"}