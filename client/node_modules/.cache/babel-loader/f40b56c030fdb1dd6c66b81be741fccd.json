{"ast":null,"code":"var _jsxFileName = \"/Users/sherlock/Desktop/wow2/client/src/components/AllotedStudents.js\";\nimport React, { useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst item = [];\nconst notAllotted = [];\nconst searchData = [];\nconst email = '';\nexport default class AllotedStudents extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      person: null\n    };\n    this.state = {\n      inputValue: ''\n    };\n  }\n\n  async componentDidMount(x) {\n    const url = \"http://localhost:1337/api/studentlogin\";\n    const response = await fetch(url);\n    const data = await response.json();\n\n    if (x != null) {\n      for (let i = 0; i < data.user.length; i++) {\n        // This will search for the \n        //particular student\n        this.setState({\n          person: data,\n          loading: false\n        });\n\n        if (data.user[i].room == x || data.user[i].block == x || data.user[i].phone == x || data.user[i].name.toLowerCase() == x.toLowerCase()) {\n          item.length = 0;\n          item.push(data.user[i]);\n          console.log(item[0]);\n        }\n      }\n    } else if (x == null) {\n      //It will load everyone's data initially\n      for (let i = data.user.length - 1; i >= 0; i--) {\n        if (data.user[i].room != null) {\n          this.setState({\n            person: data,\n            loading: false\n          });\n          item.push(data.user[i]);\n          console.log(data.user[0]);\n        } else {\n          notAllotted.push(data.user[i]);\n        }\n      }\n    }\n  }\n\n  refreshPage() {\n    window.location.reload();\n  }\n\n  updateInputValue(evt) {\n    this.setState({\n      inputValue: evt.target.value\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Alloted Students\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: evt => {\n          var x = evt.target.value;\n          this.componentDidMount(x);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.refreshPage,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: item.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Name: \", user.name, \" Room: \", user.room, \" Block: \", user.block, \"Phone: \", user.phone, \" Roll: \", user.roll]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: notAllotted.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Name: \", user.name, \" Room: \", user.room, \"Block: \", user.block, \" Phone: \", user.phone, \" Roll: \", user.roll]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 16\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/sherlock/Desktop/wow2/client/src/components/AllotedStudents.js"],"names":["React","useState","useHistory","axios","item","notAllotted","searchData","email","AllotedStudents","Component","constructor","props","state","loading","person","inputValue","componentDidMount","x","url","response","fetch","data","json","i","user","length","setState","room","block","phone","name","toLowerCase","push","console","log","refreshPage","window","location","reload","updateInputValue","evt","target","value","render","textAlign","map","roll"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {useHistory} from \"react-router-dom\";\nimport axios from 'axios';\n  \n\nconst item=[];\nconst notAllotted=[];\nconst searchData=[];\nconst email='';\n\nexport default class AllotedStudents extends React.Component{\n    \n    constructor(props){\n        super(props);\n        this.state={\n            inputValue:'',\n        };\n    }\n\n    state={\n        loading: true,\n        person: null,\n    }\n\n    async componentDidMount(x){\n        const url=\"http://localhost:1337/api/studentlogin\";\n        const response = await fetch(url);\n        \n        const data = await response.json();\n        if(x!=null){\n\n            for(let i=0;i<data.user.length;i++){ // This will search for the \n                //particular student\n                this.setState({person: data, loading: false})\n                if(data.user[i].room==x ||  \n                    data.user[i].block==x || \n                    data.user[i].phone==x ||\n                    data.user[i].name.toLowerCase()==x.toLowerCase())\n                    {\n                        item.length=0;\n                        item.push(data.user[i]);\n                        console.log(item[0]);\n                }\n            }\n        }\n        else if(x==null){ //It will load everyone's data initially\n            for(let i=data.user.length-1;i>=0;i--){\n                if(data.user[i].room!=null){\n                    this.setState({person: data, loading: false})\n                    item.push(data.user[i]);\n                    console.log(data.user[0])\n                }\n                else{\n                    notAllotted.push(data.user[i]);\n                }\n            }\n        }\n    }\n\n    refreshPage(){\n        window.location.reload();\n    } \n\n    updateInputValue(evt) {\n        this.setState({\n          inputValue: evt.target.value\n        });\n      }\n    \n    render(){\n        \n        return <div style={{textAlign: 'center'}}>\n            \n            <h1>Alloted Students</h1>\n\n            <input type=\"text\" \n            onChange={(evt) => {var x=evt.target.value; \n            this.componentDidMount(x) }} />\n\n            <button onClick={this.refreshPage}>Clear</button>\n            <div>{item.map(user => \n                <div>\n                    <p>Name: {user.name} Room: {user.room} Block: {user.block}\n                        Phone: {user.phone} Roll: {user.roll}\n                    </p>\n                </div>\n            )}</div>\n\n            <div>{notAllotted.map(user => \n                <div>\n                    <p>Name: {user.name} Room: {user.room} \n                        Block: {user.block} Phone: {user.phone} Roll: {user.roll}\n                    </p>\n                </div>\n            )}</div>\n        </div>\n    }\n}"]},"metadata":{},"sourceType":"module"}