{"ast":null,"code":"var _jsxFileName = \"/Users/sherlock/Desktop/wow2/client/src/pages/quote.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = () => {\n  _s();\n\n  const history = useHistory();\n  const [quote, setQuote] = useState('');\n  const [tempQuote, setTempQuote] = useState('');\n\n  async function populateQuote() {\n    const req = await fetch('http://localhost:1337/api/quote');\n    const data = await req.json();\n\n    if (data.status === 'ok') {\n      setQuote(data.quote);\n    } else {\n      alert(data.error);\n    }\n  }\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n\n    if (token) {\n      const user = jwt.decode(token);\n\n      if (!user) {\n        localStorage.removeItem('token');\n        history.replace('/login');\n      } else {\n        populateQuote();\n      }\n    }\n  }, []);\n\n  async function updateQuote(event) {\n    event.preventDefault();\n    const req = await fetch('http://localhost:1337/api/quote', {\n      method: 'POST',\n      body: JSON.stringify({\n        quote: tempQuote\n      })\n    });\n    const data = await req.json();\n\n    if (data.status === 'ok') {\n      setQuote(tempQuote);\n      setTempQuote('');\n    } else {\n      alert(data.error);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Your quote: \", quote || 'No quote found']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: updateQuote,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Quote\",\n        value: tempQuote,\n        onChange: e => setTempQuote(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Update quote\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Dashboard, \"LplMk0xp4gApsYE42pcgGIRN3Iw=\", true);\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Users/sherlock/Desktop/wow2/client/src/pages/quote.js"],"names":["React","useEffect","useState","Dashboard","history","useHistory","quote","setQuote","tempQuote","setTempQuote","populateQuote","req","fetch","data","json","status","alert","error","token","localStorage","getItem","user","jwt","decode","removeItem","replace","updateQuote","event","preventDefault","method","body","JSON","stringify","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;AAGA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACvB,QAAMC,OAAO,GAAGC,UAAU,EAA1B;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,EAAD,CAA1C;;AAEA,iBAAeQ,aAAf,GAA+B;AAC9B,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,iCAAD,CAAvB;AAEA,UAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;;AACA,QAAID,IAAI,CAACE,MAAL,KAAgB,IAApB,EAA0B;AACzBR,MAAAA,QAAQ,CAACM,IAAI,CAACP,KAAN,CAAR;AACA,KAFD,MAEO;AACNU,MAAAA,KAAK,CAACH,IAAI,CAACI,KAAN,CAAL;AACA;AACD;;AAEDhB,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMiB,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;;AACA,QAAIF,KAAJ,EAAW;AACV,YAAMG,IAAI,GAAGC,GAAG,CAACC,MAAJ,CAAWL,KAAX,CAAb;;AACA,UAAI,CAACG,IAAL,EAAW;AACVF,QAAAA,YAAY,CAACK,UAAb,CAAwB,OAAxB;AACApB,QAAAA,OAAO,CAACqB,OAAR,CAAgB,QAAhB;AACA,OAHD,MAGO;AACNf,QAAAA,aAAa;AACb;AACD;AACD,GAXQ,EAWN,EAXM,CAAT;;AAaA,iBAAegB,WAAf,CAA2BC,KAA3B,EAAkC;AACjCA,IAAAA,KAAK,CAACC,cAAN;AAEA,UAAMjB,GAAG,GAAG,MAAMC,KAAK,CAAC,iCAAD,EAAoC;AAC1DiB,MAAAA,MAAM,EAAE,MADkD;AAE1DC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACpB1B,QAAAA,KAAK,EAAEE;AADa,OAAf;AAFoD,KAApC,CAAvB;AAOA,UAAMK,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;;AACA,QAAID,IAAI,CAACE,MAAL,KAAgB,IAApB,EAA0B;AACzBR,MAAAA,QAAQ,CAACC,SAAD,CAAR;AACAC,MAAAA,YAAY,CAAC,EAAD,CAAZ;AACA,KAHD,MAGO;AACNO,MAAAA,KAAK,CAACH,IAAI,CAACI,KAAN,CAAL;AACA;AACD;;AAED,sBACC;AAAA,4BACC;AAAA,iCAAiBX,KAAK,IAAI,gBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAEC;AAAM,MAAA,QAAQ,EAAEoB,WAAhB;AAAA,8BACC;AACC,QAAA,IAAI,EAAC,MADN;AAEC,QAAA,WAAW,EAAC,OAFb;AAGC,QAAA,KAAK,EAAElB,SAHR;AAIC,QAAA,QAAQ,EAAGyB,CAAD,IAAOxB,YAAY,CAACwB,CAAC,CAACC,MAAF,CAASC,KAAV;AAJ9B;AAAA;AAAA;AAAA;AAAA,cADD,eAOC;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,cAPD;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAcA,CA9DD;;GAAMhC,S;;KAAAA,S;AAgEN,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\n\n\nconst Dashboard = () => {\n\tconst history = useHistory()\n\tconst [quote, setQuote] = useState('')\n\tconst [tempQuote, setTempQuote] = useState('')\n\n\tasync function populateQuote() {\n\t\tconst req = await fetch('http://localhost:1337/api/quote')\n\n\t\tconst data = await req.json()\n\t\tif (data.status === 'ok') {\n\t\t\tsetQuote(data.quote)\n\t\t} else {\n\t\t\talert(data.error)\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\tconst token = localStorage.getItem('token')\n\t\tif (token) {\n\t\t\tconst user = jwt.decode(token)\n\t\t\tif (!user) {\n\t\t\t\tlocalStorage.removeItem('token')\n\t\t\t\thistory.replace('/login')\n\t\t\t} else {\n\t\t\t\tpopulateQuote()\n\t\t\t}\n\t\t}\n\t}, [])\n\n\tasync function updateQuote(event) {\n\t\tevent.preventDefault()\n\n\t\tconst req = await fetch('http://localhost:1337/api/quote', {\n\t\t\tmethod: 'POST',\n\t\t\tbody: JSON.stringify({\n\t\t\t\tquote: tempQuote,\n\t\t\t}),\n\t\t})\n\n\t\tconst data = await req.json()\n\t\tif (data.status === 'ok') {\n\t\t\tsetQuote(tempQuote)\n\t\t\tsetTempQuote('')\n\t\t} else {\n\t\t\talert(data.error)\n\t\t}\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<h1>Your quote: {quote || 'No quote found'}</h1>\n\t\t\t<form onSubmit={updateQuote}>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tplaceholder=\"Quote\"\n\t\t\t\t\tvalue={tempQuote}\n\t\t\t\t\tonChange={(e) => setTempQuote(e.target.value)}\n\t\t\t\t/>\n\t\t\t\t<input type=\"submit\" value=\"Update quote\" />\n\t\t\t</form>\n\t\t</div>\n\t)\n}\n\nexport default Dashboard"]},"metadata":{},"sourceType":"module"}